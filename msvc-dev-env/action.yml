name: MSVC Development Environment
author: Michael Beckh
description: Set environment variables for a MSVC development environment.
inputs:
  arch:
    description: The architecture (optional, defaults to amd64 aka x64)
    default: amd64
  env-file:
    description: Also write the output to a file (relative to workspace directory) for re-use in a different job.
runs:
  using: composite
  steps:
    - name: Configure Development Environment
      shell: cmd
      working-directory: ${{github.action_path}}
      env:
        INPUT_ARCH: ${{inputs.arch == 'x64' && 'amd64' || inputs.arch}}
      run: |
        rem Configure Development Environment
        for /f "usebackq delims=<" %%p in (`vswhere -latest -property installationPath -format value`) do set CMU_VS_ROOT=%%p
        set > old.env
        echo ::group::Running "%CMU_VS_ROOT%\VC\Auxiliary\Build\vcvarsall.bat" %INPUT_ARCH%
        call "%CMU_VS_ROOT%\VC\Auxiliary\Build\vcvarsall.bat" %INPUT_ARCH%
        echo ::endgroup::
        set > new.env

    - name: Detect Changes to Development Environment
      shell: bash
      working-directory: ${{github.action_path}}
      env:
        ENV_FILE: ${{inputs.env-file && format('{0}/{1}', github.workspace, inputs.env-file) || 'dev.env'}}
      run: |
        # Detect Changes to Development Environment
        special='(EXTERNAL_)?INCLUDE|LIB(PATH)?|PATH'
        join -v 2 -t '' -i <(sort -f old.env) <(sort -f new.env) | \
        tee >(egrep -v -i "^($special)=" > "$ENV_FILE") | \
        egrep -i "^($special)=" | while read -r line; do
          value=$(awk 'BEGIN{RS=FS="[;\n]";ORS=";"}!seen[tolower($0)]++' <<< ${line#*=})
          echo "${line%%=*}=${value%;}"
        done >> "$ENV_FILE"
        
        echo "::group::Environment Variables for Development Environment"
        tee -a "$GITHUB_ENV" < "$ENV_FILE"
        echo "::endgroup::"
