name: build

on:
  push:
    branches: [ master, 'feature**' ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build and Test
    runs-on: windows-latest
    strategy:
      matrix:
        # Release
        configuration: [ Debug ]

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: source

    - name: Create Build Directory and Prepare Build
      id: setup
      shell: cmd
      run: |
        cmake -E make_directory ${{github.workspace}}/build/%GITHUB_REPOSITORY:*/=%/${{matrix.configuration}}
        echo ::set-output name=repository::%GITHUB_REPOSITORY:*/=%
        nuget sources add -source "https://nuget.pkg.github.com/${{github.repository_owner}}/index.json" -storepasswordincleartext -name "GitHub" -username "${{github.repository_owner}}" -password "${{secrets.GITHUB_TOKEN}}"

    - name: Cache vcpkg
      uses: actions/cache@v2
      with:
        path: |
          ${{github.workspace}}/build/${{steps.setup.outputs.repository}}/${{matrix.configuration}}/vcpkg_installed
          ${{github.workspace}}/build/${{steps.setup.outputs.repository}}/vcpkg-packages
        key: vcpkg-${{hashFiles('source/**/vcpkg.json')}}

    - name: Setup MSVC Environment
      uses: ilammy/msvc-dev-cmd@dd5e2fa0a7de1e7929605d9ecc020e749d9856a3

    - name: Configure
      shell: cmd
      working-directory: ${{github.workspace}}/build/${{steps.setup.outputs.repository}}/${{matrix.configuration}}
      run: cmake -DCMAKE_BUILD_TYPE=${{matrix.configuration}} -DBUILD_ROOT=${{github.workspace}}/build -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/source/Toolchain.cmake -Dvcpkg_ROOT=%VCPKG_INSTALLATION_ROOT% -DVCPKG_BINARY_SOURCES=clear;nuget,GitHub,readwrite -G Ninja --log-level=DEBUG ${{github.workspace}}/source/test

    - name: Build
      shell: cmd
      working-directory: ${{github.workspace}}/build/${{steps.setup.outputs.repository}}/${{matrix.configuration}}
      run: cmake --build .

    - name: Test
      if: matrix.configuration != 'Debug'
      shell: cmd
      working-directory: ${{github.workspace}}/build/${{steps.setup.outputs.repository}}/${{matrix.configuration}}
      run: ctest -C ${{matrix.configuration}} --output-on-failure

    - name: Coverage (TODO)
      if: matrix.configuration == 'Debug'
      shell: cmd
      working-directory: ${{github.workspace}}/build/${{steps.setup.outputs.repository}}/${{matrix.configuration}}
      run: ctest -C ${{matrix.configuration}} --output-on-failure

    - name: Analyze
      shell: cmd
      working-directory: ${{github.workspace}}/build/${{steps.setup.outputs.repository}}/${{matrix.configuration}}
      run: cmake --build . --target clang-tidy

    - name: Save vcpkg Build Logs
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: vcpkg-build
        path: |
          ${{github.workspace}}/build/${{steps.setup.outputs.repository}}/vcpkg-buildtrees/*/*.log

    - name: Save Test Logs
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test
        path: |
          ${{github.workspace}}/build/${{steps.setup.outputs.repository}}/${{matrix.configuration}}/Testing/**/*.log

    - name: Save clang-tidy Logs
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: clang-tidy
        path: |
          ${{github.workspace}}/build/${{steps.setup.outputs.repository}}/${{matrix.configuration}}/clang-tidy-*.log
