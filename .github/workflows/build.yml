name: build

on:
  push:
    branches: [ master, 'feature**' ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build and Test
    runs-on: windows-latest
    strategy:
      matrix:
        # Release
        configuration: [ Debug ]

    steps:
    - name: Create Build Directory and Prepare Build
      id: setup
      shell: cmd
      run: |
        cmake -E make_directory ${{github.workspace}}/build/%GITHUB_REPOSITORY:*/=%/${{matrix.configuration}}
        echo ::set-output name=repository_name::%GITHUB_REPOSITORY:*/=%
        nuget sources add -source "https://nuget.pkg.github.com/${{github.repository_owner}}/index.json" -storepasswordincleartext -name "GitHub" -username "${{github.repository_owner}}" -password "${{secrets.GITHUB_TOKEN}}"

    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: ${{steps.setup.outputs.repository_name}}

    - name: Cache vcpkg
      uses: actions/cache@v2
      with:
        path: ${{github.workspace}}/build/${{steps.setup.outputs.repository_name}}/${{matrix.configuration}}/vcpkg_installed
        key: vcpkg_installed-${{matrix.configuration}}-${{hashFiles('${{steps.setup.outputs.repository_name}}/**/vcpkg.json', '${{steps.setup.outputs.repository_name}}/**/vcpkg-configuration.json')}}

    - name: Setup MSVC Environment
      uses: ilammy/msvc-dev-cmd@dd5e2fa0a7de1e7929605d9ecc020e749d9856a3

    - name: Configure
      shell: cmd
      working-directory: ${{github.workspace}}/build/${{steps.setup.outputs.repository_name}}/${{matrix.configuration}}
      run: cmake -DCMAKE_BUILD_TYPE=${{matrix.configuration}} -DBUILD_ROOT=${{github.workspace}}/build -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/${{steps.setup.outputs.repository_name}}/Toolchain.cmake -Dvcpkg_ROOT=%VCPKG_INSTALLATION_ROOT% -DVCPKG_BINARY_SOURCES=clear;nuget,GitHub,readwrite -G Ninja ${{github.workspace}}/${{steps.setup.outputs.repository_name}}/test

    - name: Build
      shell: cmd
      working-directory: ${{github.workspace}}/build/${{steps.setup.outputs.repository_name}}/${{matrix.configuration}}
      run: cmake --build .

    - name: Test
      shell: cmd
      working-directory: ${{github.workspace}}/build/${{steps.setup.outputs.repository_name}}/${{matrix.configuration}}
      run: ctest --output-on-failure -E execute

    - name: Coverage
      if: matrix.configuration == 'Debug'
      uses: ./cmake-utils/actions/coverage
      with:
        command: ctest --output-on-failure -R execute
        source-dir: ${{github.workspace}}/${{steps.setup.outputs.repository_name}}/test
        binary-dir: ${{github.workspace}}/build/${{steps.setup.outputs.repository_name}}/${{matrix.configuration}}
        github-token: ${{secrets.GITHUB_TOKEN}}
        codacy-token: ${{secrets.CODACY_PROJECT_API_TOKEN}}

    - name: Analyze
      shell: cmd
      working-directory: ${{github.workspace}}/build/${{steps.setup.outputs.repository_name}}/${{matrix.configuration}}
      run: cmake --build . --target clang-tidy

    - name: Analyze Report
      uses: ./cmake-utils/actions/analyze-report
      with:
        binary-dir: ${{github.workspace}}/build/${{steps.setup.outputs.repository_name}}/${{matrix.configuration}}
        github-token: ${{secrets.GITHUB_TOKEN}}
        codacy-token: ${{secrets.CODACY_PROJECT_API_TOKEN}}

    - name: Save vcpkg Build Logs
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: vcpkg-build
        path: ${{github.workspace}}/build/${{steps.setup.outputs.repository_name}}/vcpkg-buildtrees/*/*.log
        if-no-files-found: ignore

    - name: Save Test Logs
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test
        path: |
            ${{github.workspace}}/build/${{steps.setup.outputs.repository_name}}/${{matrix.configuration}}/Testing/**/*.log
            ${{github.workspace}}/.mbeckh/coverage/*.xml

    - name: Save clang-tidy Logs
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: clang-tidy
        path: ${{github.workspace}}/build/${{steps.setup.outputs.repository_name}}/${{matrix.configuration}}/clang-tidy-*.log
